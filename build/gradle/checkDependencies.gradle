// Fraunhofer Institute for Computer Graphics Research (IGD)
// Department Spatial Information Management (GEO)
//
// Copyright (c) 2013-2014 Fraunhofer IGD.
//
// This file is part of hale-build.
//
// hale-build is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// hale-build is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with hale-build.  If not, see <http://www.gnu.org/licenses/>.

buildscript {
    dependencies {
        classpath files(new File(project.rootDir, 'depchk/jdepchk.jar'))
    }
}

import ch.parren.jdepchk.JDepChk

/**
 * This task invokes jdepcheck on all plugins. This is meant to ensure
 * the code follows the architecure, at least as far as static dependencies
 * are concerned. Plugin dependencies are not checked.
 *
 * Just needs compiled classes, so the whole update site is probably
 * a slightly excessive task dependency.
 */
task checkDependencies(dependsOn: buildUpdateSite) << {
    def res_strings = new BundleParser(project).getParsedBundles().collect { b ->
        JDepChk.main([
            '-r', 'depchk/arch.jdep',
            '-c', b.value.path.path + '/target/classes',
            '--use-asm-checker', // slower but checks attributes
        ] as String[])
    }
}

commitStage.dependsOn(checkDependencies)

<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns="http://www.esdi-humboldt.eu/hale/alignment"
	xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.esdi-humboldt.eu/hale/alignment"
	version="2.6" elementFormDefault="qualified">
	
	<!-- Alignment -->
	<xs:element name="alignment" type="AlignmentType">
		<xs:annotation>
			<xs:documentation>A collection of alignment cells.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
	<xs:complexType name="AlignmentType">
		<xs:sequence>
			<xs:element name="base" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:attribute name="prefix" type="xs:string" use="required" />
					<xs:attribute name="location" type="xs:anyURI" use="required" />
				</xs:complexType>
			</xs:element>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="cell" minOccurs="1" />
				<xs:element ref="modifier" minOccurs="1" />
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	
	<!-- Cell -->
	<xs:element name="cell" type="CellType">
		<xs:annotation>
			<xs:documentation>Represents a class or property relation.</xs:documentation>
		</xs:annotation>
	</xs:element>
	
	<xs:complexType name="CellType">
		<xs:sequence>
			<xs:element name="source" type="NamedEntityType" minOccurs="0" maxOccurs="unbounded" />
			<xs:element name="target" type="NamedEntityType" minOccurs="1" maxOccurs="unbounded" />
			<xs:element ref="AbstractParameter" minOccurs="0" maxOccurs="unbounded" />
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element name="documentation" type="DocumentationType" minOccurs="1" />
				<xs:element name="annotation" type="AnnotationType" minOccurs="1" />
			</xs:choice>
		</xs:sequence>
		<xs:attribute name="relation" type="xs:string" use="required" />
		<xs:attribute name="id" type="xs:ID" use="required" />
		<xs:attribute name="priority" type="PriorityType" use="optional" default="normal" />
	</xs:complexType>
	
	<xs:simpleType name="PriorityType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="high"></xs:enumeration>
			<xs:enumeration value="normal"></xs:enumeration>
			<xs:enumeration value="low"></xs:enumeration>
			<xs:enumeration value="lowest"></xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	
	<!-- Modifier -->
	<xs:element name="modifier" type="ModifierType" />
	
	<xs:complexType name="ModifierType">
		<xs:sequence>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element name="disable-for" minOccurs="1">
					<xs:complexType>
						<xs:attribute name="parent" type="xs:string" use="required" />
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:element name="transformation" minOccurs="0">
				<xs:complexType>
					<xs:attribute name="mode" type="TransformationModeType" use="required" />
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="cell" type="xs:string" use="required" />
	</xs:complexType>
	
	<xs:simpleType name="TransformationModeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="active"></xs:enumeration>
			<xs:enumeration value="passive"></xs:enumeration>
			<xs:enumeration value="disabled"></xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	
	<!-- Annotations -->
	<xs:simpleType name="preserveWhitespaceString">
		<xs:restriction base="xs:string">
			<xs:whiteSpace value="preserve" />
		</xs:restriction>
	</xs:simpleType>
	
	<xs:complexType name="DocumentationType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="type" type="preserveWhitespaceString" use="optional" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	
	<xs:complexType name="AnnotationType">
		<xs:sequence>
			<xs:any processContents="skip" />
		</xs:sequence>
		<xs:attribute name="type" type="xs:string" use="required" />
	</xs:complexType>
	
	<!-- Named entity -->
	<xs:complexType name="NamedEntityType">
		<xs:sequence>
			<xs:element ref="AbstractEntity" minOccurs="1" />
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="optional" />
	</xs:complexType>
	
	<!-- Entity -->
	<xs:element name="AbstractEntity" type="AbstractEntityType" abstract="true" />
	
	<xs:complexType name="AbstractEntityType" abstract="true" />
	
	<!-- Class -->
	<xs:element name="class" type="ClassType" substitutionGroup="AbstractEntity" />
	
	<xs:complexType name="ClassType">
		<xs:complexContent>
			<xs:extension base="AbstractEntityType">
				<xs:sequence>
					<xs:element name="type" minOccurs="1">
						<xs:complexType>
							<xs:complexContent>
								<xs:extension base="QNameType">
									<xs:sequence>
										<xs:element name="condition" type="ConditionType" minOccurs="0" />
									</xs:sequence>
								</xs:extension>
							</xs:complexContent>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<!-- Property -->
	<xs:element name="property" type="PropertyType" substitutionGroup="AbstractEntity" />
	
	<xs:complexType name="PropertyType">
		<xs:complexContent>
			<xs:extension base="ClassType">
				<xs:sequence>
					<xs:element name="child" type="ChildContextType" minOccurs="1" maxOccurs="unbounded" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="ChildContextType">
		<xs:complexContent>
			<xs:extension base="QNameType">
				<xs:choice minOccurs="0">
					<xs:element name="condition" type="ConditionType" minOccurs="1" />
					<!-- For the context name in HALE at some point a string would make sense
					     to have real _named_ contexts. -->
					<xs:element name="context" type="xs:integer" minOccurs="1" />
					<xs:element name="index" type="xs:nonNegativeInteger" minOccurs="1" />
				</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<!-- Parameter -->
	<xs:element name="AbstractParameter" type="AbstractParameterType" />
	
	<xs:complexType name="AbstractParameterType">
		<xs:attribute name="name" type="xs:string" use="required" />
	</xs:complexType>
	
	<xs:complexType name="ComplexParameterType">
		<xs:complexContent>
			<xs:extension base="AbstractParameterType">
				<xs:sequence>
					<xs:any processContents="skip" minOccurs="1" />
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:element name="complexParameter" type="ComplexParameterType" substitutionGroup="AbstractParameter" />
	
	<xs:complexType name="ParameterType">
		<xs:complexContent>
			<xs:extension base="AbstractParameterType">
				<xs:attribute name="type" type="xs:string" use="optional" default="default" />
				<xs:attribute name="value" type="xs:string" use="required" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:element name="parameter" type="ParameterType" substitutionGroup="AbstractParameter" nillable="true" />
	
	<!-- Qualified name -->
	<xs:complexType name="QNameType">
		<xs:annotation>
			<xs:documentation>A qualified name with local part and namespace</xs:documentation>
		</xs:annotation>
		<xs:attribute name="name" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Contains the local name.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ns" type="xs:anyURI" use="optional">
			<xs:annotation>
				<xs:documentation>Contains the namespace URI if applicable.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	
	<!-- Condition -->
	<xs:complexType name="ConditionType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="lang" type="xs:string" use="optional" default="CQL" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
</xs:schema>
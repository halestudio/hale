//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-558 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.01.07 at 01:07:31 PM CET 
//

package eu.esdihumboldt.commons.mediator.transformer;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each Java content interface and Java
 * element interface generated in the generated package.
 * <p>
 * An ObjectFactory allows you to programatically construct new instances of the
 * Java representation for XML content. The Java representation of XML content
 * can consist of schema derived interfaces and classes representing the binding
 * of schema type definitions, element declarations and model groups. Factory
 * methods for each of these are provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

	private final static QName _SimpleDataInput_QNAME = new QName("",
			"SimpleDataInput");
	private final static QName _Workflow_QNAME = new QName("", "Workflow");
	private final static QName _TransformerDataInput_QNAME = new QName("",
			"TransformerDataInput");
	private final static QName _DataInput_QNAME = new QName("", "DataInput");
	private final static QName _ComplexDataInput_QNAME = new QName("",
			"ComplexDataInput");
	private final static QName _Transformer_QNAME = new QName("", "Transformer");

	/**
	 * Create a new ObjectFactory that can be used to create new instances of
	 * schema derived classes for package: generated
	 * 
	 */
	public ObjectFactory() {
	}

	/**
	 * Create an instance of {@link DataInput }
	 * 
	 */
	public DataInput createDataInput() {
		return new DataInput();
	}

	/**
	 * Create an instance of {@link TransformerDataInput }
	 * 
	 */
	public TransformerDataInput createTransformerDataInput() {
		return new TransformerDataInput();
	}

	/**
	 * Create an instance of {@link ComplexDataInput }
	 * 
	 */
	public ComplexDataInput createComplexDataInput() {
		return new ComplexDataInput();
	}

	/**
	 * Create an instance of {@link SimpleDataInput }
	 * 
	 */
	public SimpleDataInput createSimpleDataInput() {
		return new SimpleDataInput();
	}

	/**
	 * Create an instance of {@link Transformer }
	 * 
	 */
	public Transformer createTransformer() {
		return new Transformer();
	}

	/**
	 * Create an instance of {@link Workflow }
	 * 
	 */
	public Workflow createWorkflow() {
		return new Workflow();
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link SimpleDataInput }
	 * {@code >}
	 * 
	 */
	@XmlElementDecl(namespace = "", name = "SimpleDataInput")
	public JAXBElement<SimpleDataInput> createSimpleDataInput(
			SimpleDataInput value) {
		return new JAXBElement<SimpleDataInput>(_SimpleDataInput_QNAME,
				SimpleDataInput.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link Workflow }
	 * {@code >}
	 * 
	 */
	@XmlElementDecl(namespace = "", name = "Workflow")
	public JAXBElement<Workflow> createWorkflow(Workflow value) {
		return new JAXBElement<Workflow>(_Workflow_QNAME, Workflow.class, null,
				value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}
	 * {@link TransformerDataInput }{@code >}
	 * 
	 */
	@XmlElementDecl(namespace = "", name = "TransformerDataInput")
	public JAXBElement<TransformerDataInput> createTransformerDataInput(
			TransformerDataInput value) {
		return new JAXBElement<TransformerDataInput>(
				_TransformerDataInput_QNAME, TransformerDataInput.class, null,
				value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link DataInput }
	 * {@code >}
	 * 
	 */
	@XmlElementDecl(namespace = "", name = "DataInput")
	public JAXBElement<DataInput> createDataInput(DataInput value) {
		return new JAXBElement<DataInput>(_DataInput_QNAME, DataInput.class,
				null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}
	 * {@link ComplexDataInput }{@code >}
	 * 
	 */
	@XmlElementDecl(namespace = "", name = "ComplexDataInput")
	public JAXBElement<ComplexDataInput> createComplexDataInput(
			ComplexDataInput value) {
		return new JAXBElement<ComplexDataInput>(_ComplexDataInput_QNAME,
				ComplexDataInput.class, null, value);
	}

	/**
	 * Create an instance of {@link JAXBElement }{@code <}{@link Transformer }
	 * {@code >}
	 * 
	 */
	@XmlElementDecl(namespace = "", name = "Transformer")
	public JAXBElement<Transformer> createTransformer(Transformer value) {
		return new JAXBElement<Transformer>(_Transformer_QNAME,
				Transformer.class, null, value);
	}

}

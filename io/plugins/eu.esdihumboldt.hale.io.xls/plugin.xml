<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>
   <extension
         point="org.eclipse.core.contenttype.contentTypes">
      <content-type
            file-extensions="xls"
            id="eu.esdihumboldt.hale.io.xls.xls"
            name="Excel Spreadsheet (XLS)"
            priority="normal">
      </content-type>
      <content-type
            file-extensions="xlsx"
            id="eu.esdihumboldt.hale.io.xls.xlsx"
            name="MS OOXML Format Spreadsheet (XLSX)"
            priority="normal">
      </content-type>
   </extension>
   <extension
         point="eu.esdihumboldt.hale.io.provider">
      <provider
            class="eu.esdihumboldt.hale.io.xls.writer.XLSAlignmentMappingWriter"
            id="eu.esdihumboldt.hale.io.xls.writer.align"
            name="Mapping table (XLS/XLSX)">
         <contentType
               ref="eu.esdihumboldt.hale.io.xls.xls">
         </contentType>
         <contentType
               ref="eu.esdihumboldt.hale.io.xls.xlsx">
         </contentType>
      </provider>
      <provider
            class="eu.esdihumboldt.hale.io.xls.writer.XLSLookupTableWriter"
            id="eu.esdihumboldt.hale.io.xls.writer.lookup"
            name="Lookup table (XLS/XLSX)">
         <contentType
               ref="eu.esdihumboldt.hale.io.xls.xls">
         </contentType>
         <contentType
               ref="eu.esdihumboldt.hale.io.xls.xlsx">
         </contentType>
      </provider>
      <provider
            allowDuplicate="true"
            class="eu.esdihumboldt.hale.io.xls.reader.XLSLookupTableReader"
            id="eu.esdihumboldt.hale.io.xls.reader.lookup"
            name="Lookup table (XLS/XLSX)">
         <contentType
               ref="eu.esdihumboldt.hale.io.xls.xls">
         </contentType>
         <contentType
               ref="eu.esdihumboldt.hale.io.xls.xlsx">
         </contentType>
      </provider>
      <provider
            allowDuplicate="true"
            class="eu.esdihumboldt.hale.io.xls.reader.XLSSchemaReader"
            id="eu.esdihumboldt.hale.io.xls.reader.schema"
            name="Excel file">
         <contentType
               ref="eu.esdihumboldt.hale.io.xls.xls">
         </contentType>
         <contentType
               ref="eu.esdihumboldt.hale.io.xls.xlsx">
         </contentType>
      </provider>
      <provider
            allowDuplicate="true"
            class="eu.esdihumboldt.hale.io.xls.reader.XLSInstanceReader"
            id="eu.esdihumboldt.hale.io.xls.reader.instance"
            name="Excel file">
         <contentType
               ref="eu.esdihumboldt.hale.io.xls.xls">
         </contentType>
         <contentType
               ref="eu.esdihumboldt.hale.io.xls.xlsx">
         </contentType>
         <providerParameter
               description="Setting to skip a certain number of lines when readin data. Useful if there are header rows."
               label="Skip N lines"
               name="skip"
               optional="true">
            <parameterBinding
                  class="java.lang.Integer">
            </parameterBinding>
            <valueDescriptor
                  default="0"
                  defaultDescription="Assume there is no header row and read all lines as data"
                  sampleDescription="Any integer equal or larger than 0">
            </valueDescriptor>
         </providerParameter>
         <providerParameter
               description="Type name(s) to use for loaded sheets. When multiple sheets are loaded you can provide type names separated by comma in order of the sheets. If no type name association is configured the reader tries to determine a type based on the sheet name."
               label="Type name"
               name="typename"
               optional="true"
               valueDescriptor="eu.esdihumboldt.hale.io.csv.TypenameParameterDescriptor">
            <parameterBinding
                  class="java.lang.String">
            </parameterBinding>
            <valueDescriptor
                  sample="{http://namespace.example.com}name"
                  sampleDescription="Notation of a type name is an optional namespace in curly braces followed by the local name.">
            </valueDescriptor>
         </providerParameter>
         <providerParameter
               description="Index of the sheet to import. 0 is the index of the first sheet. Required if not using option to load multiple sheets."
               label="Sheet index"
               name="sheetIndex"
               optional="true">
            <parameterBinding
                  class="java.lang.Integer">
            </parameterBinding>
         </providerParameter>
         <providerParameter
               description="Use the source schema for the order and number of exported columns."
               label="Use the source schema for the exported columns"
               name="useSchema"
               optional="true">
            <parameterBinding
                  class="java.lang.Boolean">
            </parameterBinding>
            <valueDescriptor
                  default="true"
                  defaultDescription="Defaults to true">
            </valueDescriptor>
         </providerParameter>
         <providerParameter
               description="Enable loading multiple sheets instead of a single one. If this is enabled the setting on the sheet index does not have any effect."
               label="Load multiple sheets"
               name="multiSheet"
               optional="true">
            <parameterBinding
                  class="java.lang.Boolean">
            </parameterBinding>
            <valueDescriptor
                  default="false"
                  defaultDescription="Default is to only load one sheet for backwards compatibility."
                  sample="true"
                  sampleDescription="Enable loading multiple sheets.">
            </valueDescriptor>
         </providerParameter>
         <providerParameter
               description="Settings for loading instances from sheets. Overrides general settings provided in other parameters for the configured sheets."
               label="Sheet settings"
               name="sheetSettings"
               optional="true"
               valueDescriptor="eu.esdihumboldt.hale.io.xls.reader.SheetSettingsValueDescriptor">
            <parameterComplexValue
                  ref="list">
            </parameterComplexValue>
         </providerParameter>
      </provider>
      <provider
            class="eu.esdihumboldt.hale.io.xls.writer.XLSInstanceWriter"
            description="Write instance to an Excel table"
            id="eu.esdihumboldt.hale.io.xls.writer.instance"
            name="Excel file">
         <contentType
               ref="eu.esdihumboldt.hale.io.xls.xls">
         </contentType>
         <contentType
               ref="eu.esdihumboldt.hale.io.xls.xlsx">
         </contentType>
         <providerParameter
               description="Schema type which instances should be exported."
               label="Export type"
               name="selectedExportType"
               optional="false"
               valueDescriptor="eu.esdihumboldt.hale.io.csv.TypenameParameterDescriptor">
            <parameterBinding
                  class="java.lang.String">
            </parameterBinding>
         </providerParameter>
         <providerParameter
               description="Ignore feature types without data to be added to the exported Excel"
               label="Ignore feature types without data"
               name="ignoreEmptyFeaturetypes"
               optional="true">
            <parameterBinding
                  class="java.lang.Boolean">
            </parameterBinding>
            <valueDescriptor
                  default="false"
                  defaultDescription="Defaults to false">
            </valueDescriptor>
         </providerParameter>
      </provider>
      </extension>

</plugin>

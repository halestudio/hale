<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
<title>Groovy Merge</title>
</head>
<body>
	<h1>Groovy Merge</h1>
	<div id="help">
		<p>
			Using the <i>Groovy Merge</i> function you can control the creation
			of a target instance for a given merged source instance through a
			Groovy script. This can be combined with using regular mapping
			functions to transform the properties. In the merged source instance
			the root properties may occur multiple times, even in contradiction
			to the source schema, depending on the merge configuration.
		</p>
		<p>In the merge configuration you specify which instances should
			be merged together by specifying a merge key property. Instances that
			have the same value for this key property will be merged into one
			instance. For the other properties the values are accumulated in the
			merged instance. If you mark a property as an additional merge
			property, only the unique values will be retained. You also have the
			possibility to let the function auto-detect properties to merge - it
			will check if there are properties where all instances to merge have
			the same value, and will add only that unique value to the merged
			instance.</p>
		<p>The Groovy script is called for each merged source instance to
			transform, and is responsible to create a corresponding target
			instance. There are dedicated APIs to access the properties of the
			source instance and to create the target instance - these are
			explained in detail below. In addition, basic knowledge of the Groovy
			programming language is recommended.</p>
		<h2>Access source properties</h2>
		<p>
			The source instance is accessible as the variable
			<code>
				<b>_source</b>
			</code>
			in the script. With
			<code>
				<b>_source</b>.p
			</code>
			or
			<code>
				<b>_source</b>.properties
			</code>
			you can create a properties accessor.
		</p>
		<include
			path="eu.esdihumboldt.cst.functions.groovy/help/common.xhtml/accessor" />

		<h2>Build the target instance</h2>
		<include
			path="eu.esdihumboldt.cst.functions.groovy/help/common.xhtml/builder" />
		<include
			path="eu.esdihumboldt.cst.functions.groovy/help/common.xhtml/builder-accessor" />

		<include
			path="eu.esdihumboldt.cst.functions.groovy/help/common.xhtml/binding-content" />
	</div>
</body>
</html>
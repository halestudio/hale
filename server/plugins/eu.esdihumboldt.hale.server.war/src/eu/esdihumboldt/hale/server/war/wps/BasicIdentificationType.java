//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.12.01 at 08:57:42 AM MEZ 
//


package eu.esdihumboldt.hale.server.war.wps;

import java.util.ArrayList;
import java.util.List;
import javax.annotation.Generated;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;


/**
 * Basic metadata identifying and describing a set of data. 
 * 
 * <p>Java class for BasicIdentificationType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="BasicIdentificationType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.opengis.net/ows/1.1}DescriptionType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.opengis.net/ows/1.1}Identifier" minOccurs="0"/>
 *         &lt;element ref="{http://www.opengis.net/ows/1.1}Metadata" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "BasicIdentificationType", propOrder = {
    "identifier",
    "metadata"
})
@XmlSeeAlso({
    ManifestType.class,
    ReferenceGroupType.class,
    IdentificationType.class
})
@Generated(value = "com.sun.tools.internal.xjc.Driver", date = "2011-12-01T08:57:42+01:00", comments = "JAXB RI vJAXB 2.1.10 in JDK 6")
public class BasicIdentificationType
    extends DescriptionType
{

    @XmlElement(name = "Identifier")
    @Generated(value = "com.sun.tools.internal.xjc.Driver", date = "2011-12-01T08:57:42+01:00", comments = "JAXB RI vJAXB 2.1.10 in JDK 6")
    protected CodeType identifier;
    @XmlElement(name = "Metadata")
    @Generated(value = "com.sun.tools.internal.xjc.Driver", date = "2011-12-01T08:57:42+01:00", comments = "JAXB RI vJAXB 2.1.10 in JDK 6")
    protected List<MetadataType> metadata;

    /**
     * Optional unique identifier or name of this dataset. 
     * 
     * @return
     *     possible object is
     *     {@link CodeType }
     *     
     */
    @Generated(value = "com.sun.tools.internal.xjc.Driver", date = "2011-12-01T08:57:42+01:00", comments = "JAXB RI vJAXB 2.1.10 in JDK 6")
    public CodeType getIdentifier() {
        return identifier;
    }

    /**
     * Sets the value of the identifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeType }
     *     
     */
    @Generated(value = "com.sun.tools.internal.xjc.Driver", date = "2011-12-01T08:57:42+01:00", comments = "JAXB RI vJAXB 2.1.10 in JDK 6")
    public void setIdentifier(CodeType value) {
        this.identifier = value;
    }

    /**
     * Optional unordered list of additional metadata about this data(set). A list of optional metadata elements for this data identification could be specified in the Implementation Specification for this service. Gets the value of the metadata property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the metadata property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getMetadata().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MetadataType }
     * 
     * 
     */
    @Generated(value = "com.sun.tools.internal.xjc.Driver", date = "2011-12-01T08:57:42+01:00", comments = "JAXB RI vJAXB 2.1.10 in JDK 6")
    public List<MetadataType> getMetadata() {
        if (metadata == null) {
            metadata = new ArrayList<MetadataType>();
        }
        return this.metadata;
    }

}

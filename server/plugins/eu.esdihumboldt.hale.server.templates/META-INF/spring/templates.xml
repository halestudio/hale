<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<!-- ignore if not present to allow using internal default -->
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>

	<!-- project scavenger -->
	<bean id="scavenger"
		class="eu.esdihumboldt.hale.server.templates.impl.TemplateScavengerImpl">
		<constructor-arg value="${hale.templatesloc}" />
	</bean>

	<!-- Jobs -->
    <bean id="templatesUpdateJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="scavenger"/>
		<property name="targetMethod" value="triggerScan"/>
		<property name="concurrent" value="false"/>
	</bean>
	
	<!-- Triggers -->
	<bean id="scavengerTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
	    <property name="jobDetail" ref="templatesUpdateJob" />
	    <!-- 30 seconds -->
	    <property name="startDelay" value="30000" />
	    <!-- repeat every 600 seconds -->
	    <property name="repeatInterval" value="600000" />
	</bean>
	
	<!-- Scheduler -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	    <property name="triggers">
	        <list>
	            <ref bean="scavengerTrigger" />
	        </list>
	    </property>
	</bean>

</beans>

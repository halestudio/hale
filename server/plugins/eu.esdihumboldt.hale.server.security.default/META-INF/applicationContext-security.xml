<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:osgi="http://www.eclipse.org/gemini/blueprint/schema/blueprint"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.eclipse.org/gemini/blueprint/schema/blueprint http://www.eclipse.org/gemini/blueprint/schema/blueprint/gemini-blueprint.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:annotation-config />

	<!-- allow HTTP security -->
	<http realm="HALE Web">
		<intercept-url pattern="//console/**" access="ROLE_ADMIN" />
		<intercept-url pattern="/**" access="ROLE_ANONYMOUS" />
		<http-basic />
		<logout />
	</http>

	<!-- Create authentication manager and reference authentication provider 
		configured below -->
	<authentication-manager>
		<!-- authenticate against default data source -->
		<authentication-provider user-service-ref="userDetails">
			<password-encoder hash="sha">
				<salt-source user-property="username" />
			</password-encoder>
		</authentication-provider>
	</authentication-manager>

	<!-- retrieve users through OSGi user details service -->
	<osgi:reference id="userDetails"
		interface="org.springframework.security.core.userdetails.UserDetailsService"
		availability="mandatory" cardinality="1..1" />

	<!-- add a bean post-processor which replaces the request matcher of all 
		beans by one that knows how to handle context paths -->
	<beans:bean
		class="eu.esdihumboldt.hale.server.security.extender.OverrideRequestMatcherPostProcessor" />

</beans:beans>

<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:osgi="http://www.eclipse.org/gemini/blueprint/schema/blueprint"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.eclipse.org/gemini/blueprint/schema/blueprint http://www.eclipse.org/gemini/blueprint/schema/blueprint/gemini-blueprint.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:annotation-config />
	
	<!-- token utility, provides a fixed runtime token for all wars -->
	<beans:bean id="tokens"
		class="eu.esdihumboldt.hale.server.security.util.Token" />

	<!-- allow HTTP security -->
	<http realm="HALE Web" entry-point-ref="loginPage">
		<remember-me services-ref="rememberMeServices" key="#{ tokens.runtimeToken }" />
		
		<session-management session-authentication-strategy-ref="session-auth" />
		
		<!-- login -->
		<intercept-url pattern="/login" access="ROLE_ANONYMOUS,ROLE_USER,ROLE_ADMIN" requires-channel="any" />
		
		<!-- resources needed for login page -->
		<intercept-url pattern="/wicket/resource/org.apache.wicket.resource.JQueryResourceReference/jquery/jquery*.js" access="ROLE_ANONYMOUS,ROLE_USER,ROLE_ADMIN" requires-channel="any" />
		<intercept-url pattern="/wicket/resource/org.apache.wicket.ajax.AbstractDefaultAjaxBehavior/res/js/wicket-event-jquery*.js" access="ROLE_ANONYMOUS,ROLE_USER,ROLE_ADMIN" requires-channel="any" />
		<intercept-url pattern="/wicket/resource/eu.esdihumboldt.hale.server.webapp.pages.BasePage/BasePage*.css" access="ROLE_ANONYMOUS,ROLE_USER,ROLE_ADMIN" requires-channel="any" />
		<intercept-url pattern="/wicket/resource/eu.esdihumboldt.hale.server.webapp.pages.BasePage/graphics/*" access="ROLE_ANONYMOUS,ROLE_USER,ROLE_ADMIN" requires-channel="any" />
		
		<!-- admin access -->
		<intercept-url pattern="//console/**" access="ROLE_ADMIN" requires-channel="any" />
		<intercept-url pattern="//projects/**" access="ROLE_ADMIN" requires-channel="any" />
		
		<!-- everything else -->
		<intercept-url pattern="/**" access="ROLE_ANONYMOUS,ROLE_USER,ROLE_ADMIN" requires-channel="any" />
		
		<custom-filter position="OPENID_FILTER" ref="openIdFilter" />
		
		<!-- openid-login login-page="/login" authentication-failure-handler-ref="failureHandler"
			user-service-ref="authUserDetails" authentication-success-handler-ref="openIdSuccessHandler">
			<attribute-exchange>
	            <openid-attribute name="email" type="http://axschema.org/contact/email" required="false"/>
	            <openid-attribute name="emailAlt" type="http://schema.openid.net/contact/email" required="false"/>
	            <openid-attribute name="firstName" type="http://axschema.org/namePerson/first" required="false"/>
	            <openid-attribute name="lastName" type="http://axschema.org/namePerson/last" required="false"/>
        	</attribute-exchange>
		</openid-login-->
		
		<anonymous /> <!-- is needed for login page -->
		<logout/>
	</http>
	
	<beans:bean id="loginPage" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:constructor-arg value="/login" />
	</beans:bean>
	
	<beans:bean id="openIdFilter" class="eu.esdihumboldt.hale.server.security.util.ProxyOpenIDAuthenticationFilter">
		<beans:property name="authenticationSuccessHandler" ref="openIdSuccessHandler" />
		<beans:property name="authenticationFailureHandler" ref="failureHandler" />
		<beans:property name="authenticationManager" ref="org.springframework.security.authenticationManager" />
	</beans:bean>
	
	<beans:bean id="openIdAuthProvider" class="org.springframework.security.openid.OpenIDAuthenticationProvider">
		<beans:property name="authenticationUserDetailsService" ref="authUserDetails" />
	</beans:bean>
	
	<beans:bean id="openIdSuccessHandler" class="eu.esdihumboldt.hale.server.security.util.NewUserAuthenticationSuccessHandler">
		<beans:property name="newUserRedirectUrl" value="./new" />
	</beans:bean>
	
	<beans:bean id="session-auth" class="eu.esdihumboldt.hale.server.security.util.MultiWarSessionAuthenticationStrategy">
		<beans:property name="logoutService" ref="logoutService" />
	</beans:bean>
	
	<!-- retrieve logout service through OSGi -->
	<osgi:reference id="logoutService"
		interface="eu.esdihumboldt.hale.server.security.util.SessionLogoutService"
		availability="mandatory" />
	
	<!-- custom remember me (sets remember me cookie for all wars, only for browser runtime) -->
	<beans:bean id="rememberMeServices" class="eu.esdihumboldt.hale.server.security.util.MultiWarRememberMeServices">
		<beans:constructor-arg value="#{ tokens.runtimeToken }" />
		<beans:constructor-arg ref="userDetails" />
		<beans:property name="alwaysRemember" value="true" />
		<beans:property name="logoutService" ref="logoutService" />
	</beans:bean>
	
	<!-- retrieve any session trackers -->
	<osgi:list id="sessionTrackers" availability="optional">
		<osgi:interfaces>
			<beans:value>eu.esdihumboldt.hale.server.security.util.SessionTracker</beans:value>
		</osgi:interfaces>
	</osgi:list>
	
	<!-- failure handler -->
	<beans:bean
		id="failureHandler"
		class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
		
		<beans:property name="defaultFailureUrl" value="/login?failure=unknown" />
		<beans:property name="exceptionMappings">
			<beans:map>
				<!-- beans:entry key="org.springframework.security.core.userdetails.UsernameNotFoundException" value="/login?failure=principal" /-->
				<beans:entry key="org.springframework.security.authentication.BadCredentialsException" value="/login?failure=credentials" />
				<beans:entry key="org.springframework.security.authentication.DisabledException" value="/login?failure=disabled" />
			</beans:map>
		</beans:property>
	</beans:bean>

	<!-- Create authentication manager and reference authentication provider 
		configured below -->
	<authentication-manager>
		<!-- authenticate against default data source -->
		<!-- authentication-provider user-service-ref="userDetails" /-->
		<authentication-provider ref="openIdAuthProvider" />
	</authentication-manager>

	<!-- retrieve users through OSGi user details service -->
	<osgi:reference id="userDetails"
		interface="org.springframework.security.core.userdetails.UserDetailsService"
		availability="mandatory" cardinality="1..1" />
		
	<osgi:reference id="authUserDetails"
		interface="org.springframework.security.core.userdetails.AuthenticationUserDetailsService"
		availability="mandatory" cardinality="1..1" />

	<!-- add a bean post-processor which replaces the request matcher of all 
		beans by one that knows how to handle context paths -->
	<beans:bean
		class="eu.esdihumboldt.hale.server.security.extender.OverrideRequestMatcherPostProcessor" />

</beans:beans>

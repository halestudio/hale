name: Check

on:
  pull_request:
    branches:
      - '*'  # Trigger on all branches for pull requests

  # also run workflow to refresh cache
  workflow_dispatch: {}
  schedule:
    # roughly every 6 days
    - cron: '0 0 2,6,10,16,22,28 * *'


# env:
  # instead of embedded Maven use local Maven CLI
  # HALE_BUILD_MAVEN_EMBEDDED: 'false'

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Maven
        uses: s4u/setup-maven-action@6c4e9964d4ecb8f1026310cd8618791fd51a8016 # v1.19.0
        with:
          java-version: 17
          java-distribution: temurin
          maven-version: 3.9.6

      - name: Clean
        run: ./build.sh clean
        working-directory: ./build

      - name: Test
        run: ./build.sh commitStage
        working-directory: ./build
      
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@5b7ee5a21e8674b695313d769f3cbdfd5d4d53a4 # v6.0.0
        if: always() # always run even if the previous step fails
        with:
          # fail if there are no test results
          require_tests: true

          # Workaround for check that is additionally created being associated
          # to the wrong workflow/run. Instead no additional check is created.
          # See https://github.com/mikepenz/action-junit-report/issues/40
          annotate_only: true
          detailed_summary: true  
          report_paths: 'build/target/testReports/*.xml' 

      # TODO archive logs?
      # build/target/testReports/*.out,build/target/testReports/*.err
  
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write # Note: Write permissions cannot be granted from forks (only works for private repos requiring enabling a related setting)

    concurrency:
      group: artifacts-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Setup Maven
        uses: s4u/setup-maven-action@6c4e9964d4ecb8f1026310cd8618791fd51a8016 # v1.19.0
        with:
          java-version: 17
          java-distribution: temurin
          maven-version: 3.9.6

      - name: Install genisoimage # required for Mac build
        run: sudo apt-get install -y genisoimage

      - name: Clean
        run: ./build.sh clean
        working-directory: ./build

      - name: Product
        run: |
          ./build.sh product --arch x86_64 --os linux HALE
          ./build.sh product --arch x86_64 --os windows HALE
          ./build.sh product --arch x86_64 --os macosx HALE
        working-directory: ./build

      - name: Upload hale studio build (Linux)
        id: upload-linux
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: hale studio (Linux)
          path: build/target/hale-studio-*linux*.tar.gz
          retention-days: 14

      - name: Upload hale studio build (Windows)
        id: upload-windows
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: hale studio (Windows)
          path: build/target/hale-studio-*win32*.zip
          retention-days: 14

      - name: Upload hale studio build (macos)
        id: upload-macos
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: hale studio (macos)
          path: |
            build/target/hale-studio-*macosx*.dmg
            build/target/hale-studio-*macosx*.tar.gz
          retention-days: 14

      - name: Find artifact comment if it exists
        if: "! github.event.pull_request.head.repo.fork " # Only run with write permissions
        uses: peter-evans/find-comment@b30e6a3c0ed37e7c023ccd3f1db5c6c0b0c23aad # v4.0.0
        id: find-comment
        with:
          token: ${{ github.token }}
          issue-number: ${{github.event.pull_request.number}}
          comment-author: github-actions[bot]
          body-includes: "hale studio builds for this pull request:"

      - name: Comment with links to artifacts
        if: "! github.event.pull_request.head.repo.fork " # Only run with write permissions
        id: comment-plan
        uses: peter-evans/create-or-update-comment@e8674b075228eee787fea43ef493e45ece1004c9 # v5.0.0
        with:
          token: ${{ github.token }}
          edit-mode: replace
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{github.event.pull_request.number}}
          body: |
            hale studio builds for this pull request:

            - [Linux x64](${{ steps.upload-linux.outputs.artifact-url }})
            - [Windows x64](${{ steps.upload-windows.outputs.artifact-url }})
            - [macos x64](${{ steps.upload-macos.outputs.artifact-url }})

            Build triggered for commit *${{ github.sha }}*.
            Artifacts are retained for 14 days.

  trivy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download hale studio build (Linux)
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: hale studio (Linux)

      - name: Extract the archive file
        run: |
          mkdir -p hale-studio-linux-trivy
          tar -xzf hale-studio-*linux*.tar.gz -C hale-studio-linux-trivy

      - name: Run Trivy vulnerability scanner in rootfs mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'rootfs'
          scan-ref: 'hale-studio-linux-trivy'
          format: 'sarif'
          severity: 'CRITICAL,HIGH'
          output: 'trivy-results.sarif'

      - name: Upload Trivy SARIF report
        uses: github/codeql-action/upload-sarif@5fe9434cd24fe243e33e7f3305f8a5b519b70280 # v4.31.1
        with:
          sarif_file: trivy-results.sarif
